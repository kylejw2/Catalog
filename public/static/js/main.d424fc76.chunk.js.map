{"version":3,"sources":["components/footer.js","components/myNav.js","components/home.js","components/upsertWord.js","components/word.js","components/addWord.js","components/myJumbotron.js","components/glossary.js","App.js","index.js","assets/IconLight.png"],"names":["Footer","className","src","icon","alt","width","href","MyNav","useState","collapsed","setCollapsed","Navbar","style","padding","light","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","target","App","Button","color","UpsertWord","props","modal","setModal","a","term","definition","visits","meta","archived","word","setWord","frontEnd","setFrontEnd","backEnd","setBackEnd","setStyle","data","setData","toggle","fetch","process","id","response","json","_id","findIndex","ele","handleClickUpdate","obj","push","index","splice","options","method","headers","body","JSON","stringify","refresh","definitions","undefined","map","def","Input","marginBottom","height","type","name","value","onChange","event","handleChangeDef","outline","marginLeft","marginTop","fontSize","Modal","ModalHeader","ModalBody","Form","FormGroup","placeholder","handleChange","Label","for","marginRight","margin","pop","check","checked","ModalFooter","Word","setIsOpen","count","trackData","reduce","acc","length","archive","Card","CardBody","window","confirm","remove","AddWord","handleAddWord","key","MyJumbotron","dropdownOpen","setOpen","searchInput","updateSearch","Jumbotron","Container","Row","Col","md","sm","lg","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","togglePop","toggleArch1","toggleArch2","searchResult","Glossary","input","match","i","state","toLowerCase","alert","setState","words","handleTogglePop","popularity","handleToggleArch1","handleToggleArch2","removeTerm","quickSort","arr","pivot","leftArr","rightArr","sort","b","termA","toUpperCase","termB","archivedWords","unarchivedWords","this","React","Component","path","exact","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d424fc76.chunk.js","sourcesContent":["import React from 'react';\nimport icon from '../assets/IconLight.png';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className='container-fluid padding'>\n            <div className='row text-center'>\n                <div className='col-md-4'>\n                    <img src={icon} alt='' width='58px'/>\n                    <hr className='light'/>\n                    <p>801-509-8540</p>\n                    <p><a href=\"mailto:kylejamwright@gmail.com?subject=Your Services\">kylejamwright@gmail.com</a></p>\n                    <p>Greater Salt Lake Area</p>\n                </div>\n                <div className='col-md-4'>\n                    <hr className='light'/>\n                    <h5>My hours</h5>\n                    <hr className='light'/>\n                    <p>Monday-Friday: 8am - 5pm</p>\n                    <p>Saturday: 10am - 4pm</p>\n                    <p>Sunday: Unavailable</p>\n                </div>\n                <div className='col-md-4'>\n                    <hr className='light'/>\n                    <h5>Service Area</h5>\n                    <hr className='light'/>\n                    <p>Utah</p>\n                    <p>All other states</p>\n                    <p>Wherever you are</p>\n                </div>\n                <div className='col-12'>\n                    <hr className='light-100'/>\n                    <h5>&copy; kylejw2.github.io</h5>\n                </div>\n            </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nconst MyNav = () => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n      <Navbar style={{padding: \"25px\"}} light >\n        <NavbarBrand href=\"/\" className=\"mr-auto\">Web Development Glossary</NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"/\"><i className=\"fa fa-home\"></i> Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/glossary/\"><i className=\"fa fa-book\"></i> Glossary</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/kylejw2\" target=\"_blank\"><i className=\"fa fa-github\"></i> GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n  );\n}\n\nexport default MyNav;","import React from 'react';\nimport {Button} from 'reactstrap';\nimport Footer from './footer';\nimport '../App.css';\nimport MyNav from './myNav';\n\n\nfunction App() {\n  return (\n    <div>\n        {/* <MyJumbotron /> */}\n        {/* <MyCarousel /> */}\n        <MyNav />\n        <div className='container-fluid padding'>\n          <div className='row welcome text-center'>\n              <div className='col-12'>\n                  <h1 className='display-3'>Web Development Glossary.</h1>\n              </div>\n              <hr/>\n              <div className='col-12'>\n                  <p className='lead'>Only the most popular terms in web development.</p>\n              </div>\n          </div>\n        </div>\n        <div className='container-fluid padding'>\n        <div className='row text-center padding'>\n        <div className='col-md-4 col-sm-6'>\n          <h3>SEARCH</h3>\n            <p>Have a word in mind? Search for it in the glossary here.</p>\n            <Button color=\"info\" href=\"/glossary/\">Search</Button>\n        </div>\n        <div className='col-md-4 col-sm-6'>\n            <h3>POPULARITY</h3>\n            <p>My algorithm finds the most relevant words/phrases for you.</p>\n            <Button color=\"info\" href=\"/glossary/\">Popularity</Button>\n        </div>\n        <div className='col-md-4 col-sm-12'>\n            <h3>TOPICS</h3>\n            <p>Want to be an expert in a specific topic? Start here.</p>\n            <Button color=\"info\" href=\"/glossary/\">Topic</Button>\n        </div>\n        </div>\n        <hr className='my-4' />\n        </div>\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, FormGroup, Label } from 'reactstrap';\n\nconst UpsertWord = (props) => {\n  const [modal, setModal] = useState(false);\n  const [word, setWord] = useState(async () => {\n    return {term: \"\", definition: [\"\"], visits: 0, meta: [], archived: false}\n  })\n  const [frontEnd, setFrontEnd] = useState(() => false);\n  const [backEnd, setBackEnd] = useState(() => false);\n  const [style, setStyle] = useState(() => false);\n  const [data, setData] = useState(() => false);\n\n  const handleChangeFrontEnd = () => {\n    const prev = frontEnd;\n    setFrontEnd(!prev);\n  }\n  const handleChangeBackEnd = () => {\n    const prev = backEnd;\n    setBackEnd(!prev);\n  }\n  const handleChangeStyle = () => {\n    const prev = style;\n    setStyle(!prev);\n  }\n  const handleChangeData = () => {\n    const prev = data;\n    setData(!prev);\n  }\n\n  const toggle = async () => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/glossary/${props.id}`);\n    const data = await response.json();\n    data._id = props.id;\n    setWord(data);\n    if (data.meta.findIndex(ele => ele === 'front-end') !== -1) {setFrontEnd(true)}\n    else {setFrontEnd(false)}\n    if (data.meta.findIndex(ele => ele === 'back-end') !== -1) {setBackEnd(true)}\n    else {setBackEnd(false)}\n    if (data.meta.findIndex(ele => ele === 'style') !== -1) {setStyle(true)}\n    else {setStyle(false)}\n    if (data.meta.findIndex(ele => ele === 'data') !== -1) {setData(true)}\n    else {setData(false)}\n    setModal(!modal)\n  };\n\n  const handleClickUpdate = async () => {\n      const obj = {...word};\n      if (frontEnd && obj.meta.findIndex(ele => ele === 'front-end') === -1) {obj.meta.push('front-end')}\n      else if (!frontEnd) {\n        const index = obj.meta.findIndex(ele => ele === 'front-end');\n        if (index !== -1) {obj.meta.splice(index, 1)}\n      }\n\n      if (backEnd && obj.meta.findIndex(ele => ele === 'back-end') === -1) {obj.meta.push('back-end')}\n      else if (!backEnd) {\n        const index = obj.meta.findIndex(ele => ele === 'back-end');\n        if (index !== -1) {obj.meta.splice(index, 1)}\n      }\n\n      if (style && obj.meta.findIndex(ele => ele === 'style') === -1) {obj.meta.push('style')}\n      else if (!style) {\n        const index = obj.meta.findIndex(ele => ele === 'style');\n        if (index !== -1) {obj.meta.splice(index, 1)}\n      }\n\n      if (data && obj.meta.findIndex(ele => ele === 'data') === -1) {obj.meta.push('data')}\n      else if (!data) {\n        const index = obj.meta.findIndex(ele => ele === 'data');\n        if (index !== -1) {obj.meta.splice(index, 1)}\n      }\n\n      delete obj._id;\n      const options = {\n          method: 'PUT',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(obj)\n      }\n      await fetch(`${process.env.REACT_APP_API_URL}/glossary/${props.id}`, options);\n      toggle();\n      props.refresh();\n  }\n  \n  const addDefinition = () => {\n    const obj = {...word};\n    obj.definition.push('');\n    setWord(obj);\n  }\n  const removeDefinition = () => {\n    const obj = {...word};\n    obj.definition.pop();\n    setWord(obj);\n  }\n  \n  const handleChange = (event) => {\n    const obj = {...word};\n    obj[event.target.name] = event.target.value;\n    setWord(obj);\n  }\n  const handleChangeDef = (event, index) => {\n    const obj = {...word};\n    obj.definition[index] = event.target.value;\n    setWord(obj);\n  }\n\n  let definitions = [''];\n  word.term !== undefined ? definitions = word.definition.map((def, index) => {\n      return <Input style={{marginBottom: \"10px\", height: \"auto\"}} type=\"textarea\" name=\"definition\" id=\"definition\" value={def} onChange={event => handleChangeDef(event, index)} />\n    }) : definitions = [''];\n\n    return (\n      <span>\n        <Button outline color=\"secondary\"  style={{marginLeft: \"10px\", marginTop: \"10px\"}} onClick={toggle}><i className=\"fa fa-gear\" style={{fontSize:\"20px\"}}></i></Button>\n        <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>New Term</ModalHeader>\n        <ModalBody>\n        <Form>\n            <FormGroup>\n                <Input type=\"text\" name=\"term\" id=\"term\" placeholder=\"Word/Phrase\" value={word.term} onChange={event => handleChange(event)}/>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"definition\" style={{marginRight: \"10px\"}}>Definition</Label>\n                {definitions}\n                <Button outline color=\"primary\" style={{margin: \"10px 10px 10px 0\"}} onClick={addDefinition}>Additonal Definition</Button>\n                <Button outline color=\"danger\" style={{margin: \"0\"}} onClick={removeDefinition}>Remove Definition</Button>\n            </FormGroup>\n            <legend>Select all that apply</legend>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"frontEnd\" checked={frontEnd} onChange={handleChangeFrontEnd}/>\n                Front-end\n                </Label>\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"backEnd\" checked={backEnd} onChange={handleChangeBackEnd}/>\n                Back-end\n                </Label>\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"style\" checked={style} onChange={handleChangeStyle}/>\n                Style\n                </Label>\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"data\" checked={data} onChange={handleChangeData}/>\n                Data\n                </Label>\n            </FormGroup>\n        </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleClickUpdate}>Update Term</Button>\n          <Button color=\"danger\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n      </span>\n    );\n}\n\nexport default UpsertWord;","import React, { useState } from 'react';\nimport { Collapse, CardBody, Card, Button } from 'reactstrap';\nimport UpsertWord from './upsertWord';\n\nconst Word = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    let count = true;\n\n    const trackData = async () => {\n      const data = {visits: props.word.visits++};\n      const options = {\n          method: 'PATCH',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n      }\n      await fetch(`${process.env.REACT_APP_API_URL}/glossary/${props.word._id}`, options);\n      count = !count;\n    }\n\n    const toggle = () => {\n      setIsOpen(!isOpen);\n      count ? trackData() : count = !count;\n    }\n\n    let definition = [''];\n    props.word.term !== undefined ? (definition = props.word.definition.reduce((acc, def, index) => index === props.word.definition.length - 1 ? acc += def : acc += def + ' ', '')) \n    : definition = '';\n\n    const handleClick = () => {\n      const toDelete = window.confirm(\"Are you sure you want to delete this term?\");\n      if (toDelete) {props.remove(props.word._id)};\n    }\n\n    const archive = async () => {\n      const archived = !props.word.archived;\n      const data = {archived: archived};\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }\n      await fetch(`${process.env.REACT_APP_API_URL}/glossary/${props.word._id}`, options);\n    }\n    \n    return (\n    <div className=\"word\">\n      <h2 onClick={toggle} className='display-4'>{props.word.term}</h2>\n      <Collapse isOpen={isOpen}>\n        <Card>\n          <CardBody>\n          {definition}\n          </CardBody>\n        </Card>\n          <Button outline color=\"danger\" style={{marginTop: \"10px\"}} onClick={handleClick}><i className=\"fa fa-trash-o\" style={{fontSize:\"20px\"}}></i></Button>\n          <UpsertWord id={props.word._id} refresh={props.refresh}/>\n          <Button outline color='warning' style={{marginLeft: \"10px\", marginTop: \"10px\"}} onClick={archive}><i className=\"fa fa-archive\" style={{fontSize:\"20px\"}}></i></Button>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default Word;","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst AddWord = (props) => {\n  const {\n    className\n  } = props;\n\n  const [modal, setModal] = useState(() => false);\n  const [word, setWord] = useState(() => {return {term: '', definition: [''], visits: 0, meta: []}})\n  const [frontEnd, setFrontEnd] = useState(() => false);\n  const [backEnd, setBackEnd] = useState(() => false);\n  const [style, setStyle] = useState(() => false);\n  const [data, setData] = useState(() => false);\n\n  const handleChangeFrontEnd = () => {\n    const prev = frontEnd;\n    setFrontEnd(!prev);\n  }\n  const handleChangeBackEnd = () => {\n    const prev = backEnd;\n    setBackEnd(!prev);\n  }\n  const handleChangeStyle = () => {\n    const prev = style;\n    setStyle(!prev);\n  }\n  const handleChangeData = () => {\n    const prev = data;\n    setData(!prev);\n  }\n\n\n  const toggle = () => {\n      setModal(!modal);\n      setWord({term: '', definition: [''], visits: 0, meta: []});\n    };\n\n  const handleAddWord = async () => {\n    if (frontEnd) {const obj = {...word}; obj.meta.push('front-end'); setWord(obj)};\n    if (backEnd) {const obj = {...word}; obj.meta.push('back-end'); setWord(obj)};\n    if (style) {const obj = {...word}; obj.meta.push('style'); setWord(obj)};\n    if (data) {const obj = {...word}; obj.meta.push('data'); setWord(obj)};\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(word)\n    }\n    await fetch(`${process.env.REACT_APP_API_URL}/glossary`, options);\n    toggle();\n    props.refresh();\n  }\n\n  const addDefinition = () => {\n    const obj = {...word};\n    obj.definition.push('');\n    setWord(obj);\n  }\n  const removeDefinition = () => {\n    const obj = {...word};\n    obj.definition.pop();\n    setWord(obj);\n  }\n\n  const handleChange = (event) => {\n    const obj = {...word};\n    obj[event.target.name] = event.target.value;\n    setWord(obj);\n  }\n  const handleChangeDef = (event, index) => {\n    const obj = {...word};\n    obj.definition[index] = event.target.value;\n    setWord(obj);\n  }\n\n  const definitions = word.definition.map((def, index) => {\n    return <Input style={{marginBottom: \"10px\"}} type=\"textarea\" name=\"definition\" id=\"definition\" key={index} value={def} onChange={event => handleChangeDef(event, index)} />\n  })\n\n  return (\n    <div>\n      <Button color=\"secondary\" onClick={toggle}>Add Term</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>New Term</ModalHeader>\n        <ModalBody>\n        <Form>\n            <FormGroup>\n                <Input type=\"text\" name=\"term\" id=\"term\" placeholder=\"Word/Phrase\" value={word.term} onChange={event => handleChange(event)}/>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"definition\" style={{marginRight: \"10px\"}}>Definition</Label>\n                {definitions}\n                <Button outline color=\"primary\" style={{margin: \"10px 10px 10px 0\"}} onClick={addDefinition}>Additonal Definition</Button>\n                <Button outline color=\"danger\" style={{margin: \"0\"}} onClick={removeDefinition}>Remove Definition</Button>\n            </FormGroup>\n            <legend>Select all that apply</legend>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"frontEnd\" checked={frontEnd} onChange={handleChangeFrontEnd}/>\n                Front-end\n                </Label>\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"backEnd\" checked={backEnd} onChange={handleChangeBackEnd}/>\n                Back-end\n                </Label>\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"style\" checked={style} onChange={handleChangeStyle}/>\n                Style\n                </Label>\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                <Input type=\"checkbox\" name=\"data\" checked={data} onChange={handleChangeData}/>\n                Data\n                </Label>\n            </FormGroup>\n        </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleAddWord}>Add Term</Button>\n          <Button color=\"danger\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AddWord;","import React, {useState} from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Jumbotron,\n    Button,\n    ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup,\n    Form, Input\n  } from 'reactstrap';\n  import AddWord from './addWord';\n\n  const MyJumbotron = (props) => {\n\n    const [dropdownOpen, setOpen] = useState(false);\n    const toggle = () => setOpen(!dropdownOpen);\n\n    const [searchInput, updateSearch] = useState(() => '');\n    const handleChange = (event) => {\n        updateSearch(event.target.value);\n    }\n    const handleClick = () => {\n        props.searchResult(searchInput);\n    }\n\n      return (\n        <Jumbotron className=\"myJumbo\">\n        <Container>\n            <Row>\n                <Col md=\"4\" sm=\"12\" lg=\"6\">\n                    <h1 className=\"display-title\">Glossary</h1>\n                </Col>\n                    <div className=\"buttons col-sm-6 col-md-4 col-lg-3\">\n                        <AddWord refresh={props.refresh}/>\n                        <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                            <DropdownToggle caret>\n                                Sort by:\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={props.togglePop}>Popularity</DropdownItem>\n                                <DropdownItem onClick={props.toggleArch1}>Archived</DropdownItem>\n                                <DropdownItem onClick={props.toggleArch2}>Not Archived</DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </div>\n                    <div className=\"buttons col-sm-6 col-md-4 col-lg-3\">\n                        <Form className=\"search-bar\" >\n                            <FormGroup>\n                                <Input type=\"text\" name=\"searchInput\" id=\"searchInput\" value={searchInput} onChange={handleChange} placeholder=\"Search\" style={{marginTop: \"20px\", height:\"40px !important\"}}/>\n                            </FormGroup>\n                        </Form>\n                        <Button onClick={handleClick}><i className=\"fa fa-search\"></i></Button>\n                    </div>\n            </Row>\n        </Container>\n        </Jumbotron>\n      )\n  }\n\nexport default MyJumbotron;","import React from 'react';\nimport Word from './word';\nimport MyJumbotron from './myJumbotron';\nimport Footer from './footer';\n\nclass Glossary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            words: [{}],\n            data: [{}],\n            popularity: false,\n            archived: false\n        }\n    }\n\n    searchResult = (input) => {\n        const match = [];\n        if (input === '') {this.refresh(); return;}\n        for (let i = 0; i < this.state.data.length; i++) {\n            if (this.state.data[i].term.toLowerCase() === input.toLowerCase() || \n            this.state.data[i].meta.findIndex(ele => ele.toLowerCase() === input.toLowerCase()) !== -1) {\n                match.push(this.state.data[i])\n            }\n        }\n        match.length === 0 ? window.alert('Sorry, no results were found')\n        : this.setState({words: match});\n    }\n\n    handleTogglePop = () => {\n        this.setState({popularity: !this.state.popularity});\n        this.refresh();\n    }\n\n    handleToggleArch1 = () => {\n        this.setState({archived: true});\n        this.refresh();\n    }\n    handleToggleArch2 = () => {\n        this.setState({archived: false});\n        this.refresh();\n    }\n\n    componentDidMount() {\n        this.refresh();\n    }\n\n    removeTerm = async (id) => {\n        const options = {\n            method: 'DELETE',\n        }\n        await fetch(`${process.env.REACT_APP_API_URL}/glossary/${id}`, options);\n        this.refresh();\n    }\n\n    quickSort = (arr) => {\n        if (arr.length === 1) {return arr};\n        const pivot = arr[arr.length - 1].visits;\n        const leftArr = [];\n        const rightArr = [];\n        for (let i = 0; i < arr.length - 1; i++) {\n            if (arr[i].visits >= pivot) {\n                leftArr.push(arr[i]);\n            } else {\n                rightArr.push(arr[i]);\n            }\n        }\n\n        if (leftArr.length > 0 && rightArr.length > 0) {\n            return [...this.quickSort(leftArr), arr[arr.length - 1], ...this.quickSort(rightArr)];\n        } else if (leftArr.length > 0) {\n            return [...this.quickSort(leftArr), arr[arr.length - 1]];\n        } else {\n            return [arr[arr.length - 1], ...this.quickSort(rightArr)];\n        }\n    }\n\n    refresh = async () => {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/glossary`);\n        let data = await response.json();\n        data.sort((a,b) => {\n            var termA = a.term.toUpperCase();\n            var termB = b.term.toUpperCase();\n            if (termA < termB) {return -1};\n            if (termB > termA) {return 1};\n            return 0;\n        });\n        const doNothing = () => {return;}\n        // IMPLEMENT THE QUICK SORT ALGORITHM ACCORDING TO NUMBER OF VISITS. THIS MUST BE DONE AFTER AN UPDATE METHOD IS CREATED FOR THE BACK-END\n        if (this.state.popularity === true) {\n            // this.setState({words: this.quickSort(data)})\n            data = this.quickSort(data);\n        }\n        if (this.state.archived === true) {\n            const archivedWords = [];\n            for (let i = 0; i < data.length; i++) {\n                data[i].archived ? archivedWords.push(data[i]): doNothing();\n            }\n            data = archivedWords;\n        } else {\n            const unarchivedWords = [];\n            for (let i = 0; i < data.length; i++) {\n                data[i].archived ? doNothing() : unarchivedWords.push(data[i]);\n            }\n            data = unarchivedWords;\n        }\n        this.setState({words: data, data: data});\n    }\n\n    render() {\n        const words = this.state.words.map(word => {\n            return (<Word \n                key={word._id} \n                word={word} \n                remove={this.removeTerm} \n                refresh={this.refresh}\n                />)\n            });\n        return (\n            <>\n            <MyJumbotron \n                togglePop={this.handleTogglePop} \n                toggleArch1={this.handleToggleArch1} \n                toggleArch2={this.handleToggleArch2} \n                refresh={this.refresh} \n                searchResult={this.searchResult}\n                className=\"no-margin\"\n            />\n            <div className='container-fluid padding'>\n                <div className=\"words\">\n                    {words}\n                </div>\n            </div>\n            <Footer />\n            </>\n        )\n    }\n}\n\nexport default Glossary;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/home';\nimport Glossary from './components/glossary';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact>\n          <Home />\n        </Route>\n        <Route path='/glossary/'>\n          <Glossary />\n        </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/IconLight.f2f223c0.png\";"],"sourceRoot":""}